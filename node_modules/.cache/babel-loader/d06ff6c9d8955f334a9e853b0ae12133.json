{"ast":null,"code":"import jSTPS_Transaction from '../jtps/jSTPS_Transaction.js';\n/**\n * AddToNum_Transaction.java\n * \n * This class is a transaction that can be executed and undone. It\n * can be stored in the jTPS transaction stack and must be constructed\n * with all the data necessary to perform both do and undo.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 2.0\n */\n\nexport class Edit_Transaction extends jSTPS_Transaction {\n  // THIS IS THE OBJECT IT WILL MANIPULATE\n\n  /**\n   * Constructor for this transaction, it initializes this\n   * object with all the data needed to both do and undo\n   * the transaction.\n   * \n   */\n  constructor(initItem, key, list, desc, assigned_to, due_date, completed) {\n    super(); // KEEP THESE FOR LATER\n\n    this.desc = initItem.description;\n    this.assigned_to = initItem.assigned_to;\n    this.due_date = initItem.due_date;\n    this.completed = initItem.completed;\n    this.newDesc = desc;\n    this.newAssigned = assigned_to;\n    this.newDueDate = due_date;\n    this.newCompleted = completed;\n    this.key = key;\n    this.list = list;\n  }\n  /**\n   * This transaction simply adds the value to the num.\n   */\n\n\n  doTransaction() {\n    this.list.items[this.key] = {\n      \"key\": this.key,\n      \"description\": this.newDesc,\n      \"assigned_to\": this.newAssigned,\n      \"due_date\": this.newDueDate,\n      \"completed\": this.newCompleted\n    };\n  }\n\n  updateList() {\n    return this.list;\n  }\n  /**\n   * As the reverse of do, this method substracts from num.\n   */\n\n\n  undoTransaction() {\n    this.list.items[this.key] = {\n      \"key\": this.key,\n      \"description\": this.desc,\n      \"assigned_to\": this.assigned_to,\n      \"due_date\": this.due_date,\n      \"completed\": this.completed\n    };\n    return this.list;\n  }\n\n  redoTransaction() {\n    this.list.items[this.key] = {\n      \"key\": this.key,\n      \"description\": this.newDesc,\n      \"assigned_to\": this.newAssigned,\n      \"due_date\": this.newDueDate,\n      \"completed\": this.newCompleted\n    };\n    return this.list;\n  }\n  /**\n   * Provides a textual summary of this transaction.\n   * \n   * @return A string storing a textual summary of this object.\n   */\n\n\n  toString() {\n    return \"Edit \" + this.initItem;\n  }\n\n}\nexport default Edit_Transaction;","map":{"version":3,"sources":["/home/tom/Documents/todo-hw2/src/jTPS-master/test/demo/Edit_Transaction.js"],"names":["jSTPS_Transaction","Edit_Transaction","constructor","initItem","key","list","desc","assigned_to","due_date","completed","description","newDesc","newAssigned","newDueDate","newCompleted","doTransaction","items","updateList","undoTransaction","redoTransaction","toString"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,8BAA9B;AACA;;;;;;;;;;;AAUA,OAAO,MAAMC,gBAAN,SAA+BD,iBAA/B,CAAiD;AACpD;;AAEA;;;;;;AAMAE,EAAAA,WAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,WAA5B,EAAyCC,QAAzC,EAAmDC,SAAnD,EAA8D;AACrE,YADqE,CAErE;;AACA,SAAKH,IAAL,GAAYH,QAAQ,CAACO,WAArB;AACA,SAAKH,WAAL,GAAmBJ,QAAQ,CAACI,WAA5B;AACA,SAAKC,QAAL,GAAgBL,QAAQ,CAACK,QAAzB;AACA,SAAKC,SAAL,GAAiBN,QAAQ,CAACM,SAA1B;AACA,SAAKE,OAAL,GAAeL,IAAf;AACA,SAAKM,WAAL,GAAmBL,WAAnB;AACA,SAAKM,UAAL,GAAkBL,QAAlB;AACA,SAAKM,YAAL,GAAoBL,SAApB;AACA,SAAKL,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH;AAED;;;;;AAGAU,EAAAA,aAAa,GAAG;AACZ,SAAKV,IAAL,CAAUW,KAAV,CAAgB,KAAKZ,GAArB,IAA4B;AAAC,aAC7B,KAAKA,GADuB;AAClB,qBAAe,KAAKO,OADF;AACW,qBAAe,KAAKC,WAD/B;AAE1B,kBAAY,KAAKC,UAFS;AAEG,mBAAa,KAAKC;AAFrB,KAA5B;AAGH;;AAEDG,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKZ,IAAZ;AACH;AAED;;;;;AAGAa,EAAAA,eAAe,GAAG;AACd,SAAKb,IAAL,CAAUW,KAAV,CAAgB,KAAKZ,GAArB,IAA4B;AAAC,aAC7B,KAAKA,GADuB;AAClB,qBAAe,KAAKE,IADF;AACQ,qBAAe,KAAKC,WAD5B;AAE1B,kBAAY,KAAKC,QAFS;AAEC,mBAAa,KAAKC;AAFnB,KAA5B;AAGA,WAAO,KAAKJ,IAAZ;AACH;;AAEDc,EAAAA,eAAe,GAAG;AACd,SAAKd,IAAL,CAAUW,KAAV,CAAgB,KAAKZ,GAArB,IAA4B;AAAC,aAC7B,KAAKA,GADuB;AAClB,qBAAe,KAAKO,OADF;AACW,qBAAe,KAAKC,WAD/B;AAE1B,kBAAY,KAAKC,UAFS;AAEG,mBAAa,KAAKC;AAFrB,KAA5B;AAGA,WAAO,KAAKT,IAAZ;AACH;AAED;;;;;;;AAKAe,EAAAA,QAAQ,GAAG;AACP,WAAO,UAAU,KAAKjB,QAAtB;AACH;;AA7DmD;AA+DxD,eAAeF,gBAAf","sourcesContent":["import jSTPS_Transaction from '../jtps/jSTPS_Transaction.js'\n/**\n * AddToNum_Transaction.java\n * \n * This class is a transaction that can be executed and undone. It\n * can be stored in the jTPS transaction stack and must be constructed\n * with all the data necessary to perform both do and undo.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 2.0\n */\nexport class Edit_Transaction extends jSTPS_Transaction {\n    // THIS IS THE OBJECT IT WILL MANIPULATE\n\n    /**\n     * Constructor for this transaction, it initializes this\n     * object with all the data needed to both do and undo\n     * the transaction.\n     * \n     */\n    constructor(initItem, key, list, desc, assigned_to, due_date, completed) {\n        super();\n        // KEEP THESE FOR LATER\n        this.desc = initItem.description;\n        this.assigned_to = initItem.assigned_to;\n        this.due_date = initItem.due_date;\n        this.completed = initItem.completed;\n        this.newDesc = desc;\n        this.newAssigned = assigned_to;\n        this.newDueDate = due_date;\n        this.newCompleted = completed;\n        this.key = key;\n        this.list = list;\n    }\n\n    /**\n     * This transaction simply adds the value to the num.\n     */\n    doTransaction() {\n        this.list.items[this.key] = {\"key\":\n        this.key, \"description\": this.newDesc, \"assigned_to\": this.newAssigned\n        , \"due_date\": this.newDueDate, \"completed\": this.newCompleted}\n    }\n\n    updateList(){\n        return this.list;\n    }\n\n    /**\n     * As the reverse of do, this method substracts from num.\n     */\n    undoTransaction() {\n        this.list.items[this.key] = {\"key\":\n        this.key, \"description\": this.desc, \"assigned_to\": this.assigned_to\n        , \"due_date\": this.due_date, \"completed\": this.completed}\n        return this.list;\n    }\n\n    redoTransaction() {\n        this.list.items[this.key] = {\"key\":\n        this.key, \"description\": this.newDesc, \"assigned_to\": this.newAssigned\n        , \"due_date\": this.newDueDate, \"completed\": this.newCompleted}\n        return this.list;\n    }\n\n    /**\n     * Provides a textual summary of this transaction.\n     * \n     * @return A string storing a textual summary of this object.\n     */\n    toString() {\n        return \"Edit \" + this.initItem;\n    }\n}\nexport default Edit_Transaction;"]},"metadata":{},"sourceType":"module"}