{"ast":null,"code":"/**\n * jTPS_Transaction.java\n * \n * This interface provides the structure that all transactions to be\n * managed by jTPS must follow. Each transaction must have defined\n * behavior for do and undo. Note that when defining custom transaction\n * classes one needs to make sure the constructor is given the objects\n * it will need to manipulate at the time the do and undo methods\n * are called.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 2.0\n */\nclass jSTPS_Transaction {\n  /**\n   * This method is called by jTPS when a transaction is executed.\n   */\n  doTransaction() {}\n  /**\n   * This method is called by jTPS when a transaction is undone.\n   */\n\n\n  undoTransaction() {}\n\n}\n\nexport default jSTPS_Transaction;","map":{"version":3,"sources":["/home/tom/Desktop/CSE 316 HW#2/todo_hw2/src/jTPS-master/test/jtps/jSTPS_Transaction.js"],"names":["jSTPS_Transaction","doTransaction","undoTransaction"],"mappings":"AAAA;;;;;;;;;;;;;AAaA,MAAMA,iBAAN,CAAwB;AACpB;;;AAGAC,EAAAA,aAAa,GAAE,CAEd;AAED;;;;;AAGAC,EAAAA,eAAe,GAAE,CAAE;;AAXC;;AAaxB,eAAeF,iBAAf","sourcesContent":["/**\n * jTPS_Transaction.java\n * \n * This interface provides the structure that all transactions to be\n * managed by jTPS must follow. Each transaction must have defined\n * behavior for do and undo. Note that when defining custom transaction\n * classes one needs to make sure the constructor is given the objects\n * it will need to manipulate at the time the do and undo methods\n * are called.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 2.0\n */\nclass jSTPS_Transaction {\n    /**\n     * This method is called by jTPS when a transaction is executed.\n     */\n    doTransaction(){\n        \n    }\n    \n    /**\n     * This method is called by jTPS when a transaction is undone.\n     */\n    undoTransaction(){}\n}\nexport default jSTPS_Transaction"]},"metadata":{},"sourceType":"module"}