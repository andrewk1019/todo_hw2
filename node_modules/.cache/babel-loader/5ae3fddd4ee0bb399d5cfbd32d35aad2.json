{"ast":null,"code":"var _jsxFileName = \"/home/tom/Desktop/CSE 316 HW#2/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nimport MoveUp_Transaction from './jTPS-master/test/demo/MoveUp_Transaction';\nimport MoveDown_Transaction from './jTPS-master/test/demo/MoveDown_Transaction';\nimport Delete_Transaction from './jTPS-master/test/demo/Delete_Transaction';\nimport Edit_Transaction from './jTPS-master/test/demo/Edit_Transaction.js';\nimport Add_Transaction from './jTPS-master/test/demo/Add_Transaction.js';\nimport Name_Transaction from './jTPS-master/test/demo/Name_Transaction.js';\nimport Owner_Transaction from './jTPS-master/test/demo/Owner_Transaction.js';\nimport jSTPS from './jTPS-master/test/jtps/jSTPS.js';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      items: null,\n      item: null,\n      redoStack: [],\n      show: true,\n      transaction: null,\n      originalName: null,\n      originalOwner: null,\n      previousName: null,\n      currentElement: null,\n      currentOwner: null\n    };\n    this.stack = new jSTPS();\n\n    this.goHome = event => {\n      this.stack.clearAllTransactions();\n      this.state.currentList.name = this.state.originalName;\n      this.state.currentList.owner = this.state.originalOwner;\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.deleteList = key => {\n      this.setState({\n        stack: [],\n        redoStack: []\n      });\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        todoLists: [...this.state.todoLists.filter(item => item.key !== key)]\n      });\n\n      for (var i = key + 1; i < this.state.todoLists.length; i++) {\n        this.state.todoLists[i].key--;\n        this.state.todoLists[i - 1] = this.state.todoLists[i];\n      }\n\n      this.state.todoLists.pop();\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      this.setState({\n        items: todoListToLoad.items\n      });\n      this.state.currentList = todoListToLoad;\n      this.state.originalName = todoListToLoad.name;\n      this.state.previousName = todoListToLoad.name;\n      this.state.originalOwner = todoListToLoad.owner;\n      this.state.previousOwner = todoListToLoad.owner;\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n\n      if (todoListToLoad.key == 0) {\n        return;\n      }\n\n      this.setState({\n        name: todoListToLoad.name\n      });\n      var newList = [];\n\n      for (var i = 0; i < this.state.todoLists.length; i++) {\n        if (this.state.todoLists[i].key < todoListToLoad.key) {\n          this.state.todoLists[i].key++;\n        }\n      }\n\n      todoListToLoad.key = 0;\n\n      for (var i = 0; i < this.state.todoLists.length; i++) {\n        newList[this.state.todoLists[i].key] = this.state.todoLists[i];\n      }\n\n      this.setState({\n        todoLists: newList\n      });\n    };\n\n    this.newList = () => {\n      var newList = [];\n      var len = this.state.todoLists.length;\n      this.state.todoLists.push({\n        \"key\": len,\n        \"name\": \"Unknown\",\n        \"owner\": \"Unknown\",\n        \"items\": []\n      });\n      this.setState({\n        currentList: this.state.todoLists[len],\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n\n      for (var i = 0; i < this.state.todoLists.length - 1; i++) {\n        this.state.todoLists[i].key = i + 1;\n      }\n\n      this.state.todoLists[this.state.todoLists.length - 1].key = 0;\n\n      for (var i = 0; i < this.state.todoLists.length; i++) {\n        newList[this.state.todoLists[i].key] = this.state.todoLists[i];\n      }\n\n      this.setState({\n        todoLists: newList\n      });\n      this.state.originalName = newList[newList.length - 1].name;\n      this.state.originalOwner = newList[newList.length - 1].owner;\n    };\n\n    this.moveItemUp = (key, event) => {\n      event.stopPropagation();\n\n      if (key == 0) {\n        return;\n      } else {\n        this.state.transaction = new MoveUp_Transaction(this.state.currentList, this.state.currentList.items[key], this.state.currentList.items[key - 1]);\n        this.stack.addTransaction(this.state.transaction);\n        var list = this.state.transaction.updateList();\n        this.setState({\n          currentList: list\n        });\n      }\n    };\n\n    this.moveItemDown = (key, event) => {\n      event.stopPropagation();\n\n      if (key == this.state.currentList.items.length - 1) {\n        return;\n      } else {\n        this.state.transaction = new MoveDown_Transaction(this.state.currentList, this.state.currentList.items[key], this.state.currentList.items[key + 1]);\n        this.stack.addTransaction(this.state.transaction);\n        var list = this.state.transaction.updateList();\n        this.setState({\n          currentList: list\n        });\n      }\n    };\n\n    this.deleteItem = (key, event) => {\n      event.stopPropagation();\n      this.state.transaction = new Delete_Transaction(this.state.currentList, key, this.state.currentList.items[key]);\n      this.stack.addTransaction(this.state.transaction);\n      var list = this.state.transaction.updateList();\n      this.setState({\n        currentList: list,\n        items: list.items\n      });\n    };\n  }\n\n  setName(event) {\n    this.setState({\n      value: event.target.value\n    });\n    this.state.currentList.name = event.target.value;\n  }\n\n  changeName(event) {\n    if (this.state.currentScreen != AppScreen.HOME_SCREEN && this.state.currentElement !== null && document.activeElement.id != \"list_name_textfield\") {\n      this.state.transaction = new Name_Transaction(this.state.previousName, this.state.currentList.name, this.state.currentList);\n      this.stack.addTransaction(this.state.transaction);\n      var list = this.state.transaction.updateList();\n      this.setState({\n        currentList: list,\n        originalName: list.name,\n        previousName: list.name\n      });\n      this.state.currentElement = null;\n    } else if (document.activeElement.id == \"list_name_textfield\" && this.state.currentElement == null) {\n      this.setState({\n        currentElement: document.activeElement.id\n      });\n    }\n  }\n\n  changeOwner(event) {\n    event.stopImmediatePropagation();\n\n    if (this.state.currentScreen != AppScreen.HOME_SCREEN && this.state.currentOwner != null && document.activeElement != \"list_owner_textfield\") {\n      this.state.transaction = new Owner_Transaction(this.state.previousOwner, this.state.currentList.owner, this.state.currentList);\n      this.stack.addTransaction(this.state.transaction);\n      var list = this.state.transaction.updateList();\n      this.setState({\n        currentList: list,\n        originalOwner: list.owner,\n        previousOwner: list.owner\n      });\n      this.state.currentOwner = null;\n    } else if (document.activeElement.id == \"list_owner_textfield\") {\n      this.state.currentOwner = document.activeElement.id;\n    }\n  }\n\n  setOwner(event) {\n    this.setState({\n      value: event.target.value\n    });\n    this.state.currentList.owner = event.target.value;\n  }\n\n  goItemScreen() {\n    this.setState({\n      currentScreen: AppScreen.ITEM_SCREEN,\n      item: null,\n      show: true\n    });\n  }\n\n  closeItemScreen() {\n    this.setState({\n      currentScreen: AppScreen.LIST_SCREEN\n    });\n    document.removeEventListener(\"keydown\", this.printEvent.bind(this));\n  }\n\n  submitItem(desc, assigned, due_date, completed) {\n    this.state.transaction = new Add_Transaction(desc, assigned, due_date, completed, this.state.currentList);\n    this.stack.addTransaction(this.state.transaction);\n    this.setState({\n      currentScreen: AppScreen.LIST_SCREEN\n    });\n  }\n\n  submitEditItem(desc, assigned, due_date, completed, key) {\n    if (key == null) {\n      return;\n    }\n\n    this.state.transaction = new Edit_Transaction(this.state.currentList.items[key], key, this.state.currentList, desc, assigned, due_date, completed);\n    this.stack.addTransaction(this.state.transaction);\n    var list = this.state.transaction.updateList();\n    this.setState({\n      currentList: list\n    });\n    this.setState({\n      currentScreen: AppScreen.LIST_SCREEN\n    });\n  }\n\n  goEditScreen(item) {\n    this.setState({\n      currentScreen: AppScreen.ITEM_SCREEN,\n      item: item,\n      show: false\n    });\n  }\n\n  printEvent(event) {\n    event.stopImmediatePropagation();\n\n    if (this.state.currentScreen === AppScreen.LIST_SCREEN) {\n      if (event.keyCode == 90 && event.ctrlKey && this.state.transaction != null) {\n        var transaction = this.state.transaction;\n        this.stack.undoTransaction();\n        var list = transaction.updateList();\n        this.setState({\n          currentList: list,\n          originalName: list.name,\n          previousName: list.name,\n          previousOwner: list.owner\n        });\n      } else if (event.keyCode == 89 && event.ctrlKey && this.state.transaction != null) {\n        var transaction = this.state.transaction;\n        this.stack.doTransaction();\n        var list = transaction.updateList();\n        this.setState({\n          currentList: list,\n          originalName: list.name,\n          originalOwner: list.owner,\n          previousName: list.name,\n          previousOwner: list.owner\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(this.state.stack);\n\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          newList: this.newList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          printEvent: this.printEvent.bind(this),\n          goHome: this.goHome.bind(this),\n          setName: this.setName.bind(this),\n          changeName: this.changeName.bind(this),\n          changeOwner: this.changeOwner.bind(this),\n          setOwner: this.setOwner.bind(this),\n          todoList: this.state.currentList,\n          currentScreen: this.state.currentScreen,\n          deleteList: this.deleteList,\n          moveItemUp: this.moveItemUp,\n          moveItemDown: this.moveItemDown,\n          deleteItem: this.deleteItem,\n          items: this.state.items,\n          goItemScreen: this.goItemScreen.bind(this),\n          goEditScreen: this.goEditScreen.bind(this),\n          currentScreen: this.state.currentScreen,\n          originalName: this.state.originalName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          closeItemScreen: this.closeItemScreen.bind(this),\n          submitItem: this.submitItem.bind(this),\n          item: this.state.item,\n          show: this.state.show,\n          currentScreen: this.state.currentScreen,\n          submitEditItem: this.submitEditItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Desktop/CSE 316 HW#2/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","MoveUp_Transaction","MoveDown_Transaction","Delete_Transaction","Edit_Transaction","Add_Transaction","Name_Transaction","Owner_Transaction","jSTPS","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","items","item","redoStack","show","transaction","originalName","originalOwner","previousName","currentElement","currentOwner","stack","goHome","event","clearAllTransactions","name","owner","setState","deleteList","key","filter","i","length","pop","loadList","todoListToLoad","previousOwner","console","log","newList","len","push","moveItemUp","stopPropagation","addTransaction","list","updateList","moveItemDown","deleteItem","setName","value","target","changeName","document","activeElement","id","changeOwner","stopImmediatePropagation","setOwner","goItemScreen","closeItemScreen","removeEventListener","printEvent","bind","submitItem","desc","assigned","due_date","completed","submitEditItem","goEditScreen","keyCode","ctrlKey","undoTransaction","doTransaction","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\nimport MoveUp_Transaction from './jTPS-master/test/demo/MoveUp_Transaction'\nimport MoveDown_Transaction from './jTPS-master/test/demo/MoveDown_Transaction'\nimport Delete_Transaction from './jTPS-master/test/demo/Delete_Transaction'\nimport Edit_Transaction from './jTPS-master/test/demo/Edit_Transaction.js';\nimport Add_Transaction from './jTPS-master/test/demo/Add_Transaction.js'\nimport Name_Transaction from './jTPS-master/test/demo/Name_Transaction.js'\nimport Owner_Transaction from './jTPS-master/test/demo/Owner_Transaction.js'\nimport jSTPS from './jTPS-master/test/jtps/jSTPS.js'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    items: null,\n    item: null,\n    redoStack: [],\n    show: true,\n    transaction: null,\n    originalName: null,\n    originalOwner: null,\n    previousName: null,\n    currentElement: null,\n    currentOwner: null,\n  }\n \n  stack = new jSTPS();\n  \n\n\n  goHome = (event) => {\n    this.stack.clearAllTransactions();\n    this.state.currentList.name = this.state.originalName;\n    this.state.currentList.owner = this.state.originalOwner;\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n  setName(event){\n    this.setState({\n        value: event.target.value\n      });\n    this.state.currentList.name = event.target.value;\n}\n\nchangeName(event){\n    if(this.state.currentScreen != AppScreen.HOME_SCREEN && this.state.currentElement !== null && document.activeElement.id != \"list_name_textfield\"){\n      this.state.transaction = new Name_Transaction(this.state.previousName, this.state.currentList.name, this.state.currentList);\n      this.stack.addTransaction(this.state.transaction);\n      var list = this.state.transaction.updateList();\n      this.setState({\n        currentList: list,\n        originalName: list.name,\n        previousName: list.name\n      })\n      this.state.currentElement = null;\n    }\n    else if(document.activeElement.id == \"list_name_textfield\" && this.state.currentElement == null){\n      this.setState({currentElement: document.activeElement.id});\n    }\n}\nchangeOwner(event){\n  event.stopImmediatePropagation();\n  if(this.state.currentScreen != AppScreen.HOME_SCREEN && this.state.currentOwner != null && document.activeElement != \"list_owner_textfield\"){\n    this.state.transaction = new Owner_Transaction(this.state.previousOwner, this.state.currentList.owner, this.state.currentList);\n    this.stack.addTransaction(this.state.transaction);\n    var list = this.state.transaction.updateList();\n    this.setState({\n      currentList: list,\n      originalOwner: list.owner,\n      previousOwner: list.owner\n    })\n    this.state.currentOwner = null;\n  }\n  else if(document.activeElement.id == \"list_owner_textfield\"){\n    this.state.currentOwner = document.activeElement.id;\n  }\n}\nsetOwner(event){\n    this.setState({\n        value: event.target.value\n      });\n    this.state.currentList.owner = event.target.value;\n}\n\n  deleteList = (key) =>{\n        this.setState({\n      stack: [],\n      redoStack: []\n    })\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({todoLists: [...this.state.todoLists.filter(item => item.key !== key)]\n    });\n    for(var i = key+1; i < this.state.todoLists.length; i++){\n      this.state.todoLists[i].key--;\n      this.state.todoLists[i - 1] = this.state.todoLists[i];\n    }\n    this.state.todoLists.pop();\n}\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    this.setState({items: todoListToLoad.items})\n    this.state.currentList = todoListToLoad;\n    this.state.originalName = todoListToLoad.name;\n    this.state.previousName = todoListToLoad.name;\n    this.state.originalOwner = todoListToLoad.owner;\n    this.state.previousOwner = todoListToLoad.owner;\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n    if(todoListToLoad.key == 0){\n      return;\n    }\n    this.setState({\n      name: todoListToLoad.name\n    })\n    var newList = [];\n    for(var i = 0; i < this.state.todoLists.length; i++){\n      if(this.state.todoLists[i].key < todoListToLoad.key){\n        this.state.todoLists[i].key++;\n      }\n    }\n    todoListToLoad.key = 0;\n    for(var i = 0; i < this.state.todoLists.length; i++){\n      newList[this.state.todoLists[i].key] = this.state.todoLists[i];\n    }\n    this.setState({\n      todoLists: newList\n    })\n  }\n\n  newList = () =>{\n     var newList = [];\n     var len = this.state.todoLists.length;\n     this.state.todoLists.push({\"key\": len, \"name\": \"Unknown\",\"owner\": \"Unknown\",\"items\": []});\n     this.setState({\n       currentList: this.state.todoLists[len],\n       currentScreen: AppScreen.LIST_SCREEN\n     })\n    for(var i = 0; i < this.state.todoLists.length - 1; i++){\n      this.state.todoLists[i].key = i+1;\n    }\n    this.state.todoLists[this.state.todoLists.length - 1].key = 0;\n    for(var i = 0; i < this.state.todoLists.length; i++){\n      newList[this.state.todoLists[i].key] = this.state.todoLists[i];\n    }\n    this.setState({\n      todoLists: newList\n    })\n    this.state.originalName = newList[newList.length - 1].name;\n    this.state.originalOwner = newList[newList.length - 1].owner;\n\n  }\n\n  moveItemUp=(key, event)=>{\n    event.stopPropagation();\n    if(key == 0){\n      return;\n    }\n    else{\n        this.state.transaction = new MoveUp_Transaction(this.state.currentList,this.state.currentList.items[key], this.state.currentList.items[key-1]);\n        this.stack.addTransaction(this.state.transaction);\n        var list = this.state.transaction.updateList();\n        this.setState({\n          currentList: list,\n        })\n    }\n}\n\nmoveItemDown=(key, event)=>{\n  event.stopPropagation();\n  if(key == this.state.currentList.items.length - 1){\n    return\n  }\n  else{\n    this.state.transaction = new MoveDown_Transaction(this.state.currentList, this.state.currentList.items[key], this.state.currentList.items[key+1])\n    this.stack.addTransaction(this.state.transaction);\n    var list = this.state.transaction.updateList();\n    this.setState({\n      currentList: list\n    })\n  }\n}\ndeleteItem = (key, event) =>{\n  event.stopPropagation();\n  this.state.transaction = new Delete_Transaction(this.state.currentList, key, this.state.currentList.items[key]);\n  this.stack.addTransaction(this.state.transaction);\n  var list = this.state.transaction.updateList();\n  this.setState({\n    currentList: list,\n    items: list.items\n  })\n}\n\ngoItemScreen(){\n  this.setState({currentScreen: AppScreen.ITEM_SCREEN\n  , item: null\n  , show: true});\n}\n\ncloseItemScreen(){\n  this.setState({currentScreen: AppScreen.LIST_SCREEN});\n  document.removeEventListener(\"keydown\", this.printEvent.bind(this))\n}\n\nsubmitItem(desc, assigned, due_date, completed){\n  this.state.transaction = new Add_Transaction(desc, assigned, due_date, completed, this.state.currentList)\n  this.stack.addTransaction(this.state.transaction);\n  this.setState({currentScreen: AppScreen.LIST_SCREEN});\n}\n\nsubmitEditItem(desc, assigned, due_date, completed,key){\n  if(key == null){\n    return;\n  }\n  this.state.transaction = new Edit_Transaction(this.state.currentList.items[key], key, this.state.currentList, desc, assigned, due_date, completed);\n  this.stack.addTransaction(this.state.transaction)\n  var list = this.state.transaction.updateList();\n  this.setState({\n    currentList: list\n  });\n  this.setState({currentScreen: AppScreen.LIST_SCREEN});\n}\ngoEditScreen(item){\n  this.setState({currentScreen: AppScreen.ITEM_SCREEN,\n                item: item\n                ,show: false});\n}\n\nprintEvent(event){\n    event.stopImmediatePropagation();\n    if(this.state.currentScreen === AppScreen.LIST_SCREEN){\n      if (event.keyCode == 90 && event.ctrlKey && this.state.transaction != null){\n        var transaction = this.state.transaction;\n        this.stack.undoTransaction();\n        var list = transaction.updateList();\n        this.setState({\n          currentList: list,\n          originalName: list.name,\n          previousName: list.name,\n          previousOwner: list.owner\n        })\n      }\n        else if(event.keyCode == 89 && event.ctrlKey && this.state.transaction != null){\n          var transaction = this.state.transaction;\n          this.stack.doTransaction();\n          var list = transaction.updateList();\n          this.setState({\n              currentList: list,\n              originalName: list.name,\n              originalOwner: list.owner,\n              previousName: list.name,\n              previousOwner: list.owner\n          })\n\n        }\n      }\n}\n\n\n  render() {\n    console.log(this.state.stack)\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} \n        newList={this.newList}/>;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n          printEvent={this.printEvent.bind(this)}\n          goHome={this.goHome.bind(this)}\n          setName={this.setName.bind(this)}\n          changeName={this.changeName.bind(this)}\n          changeOwner={this.changeOwner.bind(this)}\n          setOwner={this.setOwner.bind(this)}\n          todoList={this.state.currentList}\n          currentScreen={this.state.currentScreen}\n          deleteList= {this.deleteList}\n          moveItemUp={this.moveItemUp} \n          moveItemDown={this.moveItemDown}\n          deleteItem={this.deleteItem}\n          items={this.state.items}\n          goItemScreen={this.goItemScreen.bind(this)}\n          goEditScreen={this.goEditScreen.bind(this)}\n          currentScreen={this.state.currentScreen}\n          originalName={this.state.originalName}/>;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen\n        closeItemScreen={this.closeItemScreen.bind(this)}\n        submitItem={this.submitItem.bind(this)}\n        item={this.state.item}\n        show={this.state.show}\n        currentScreen={this.state.currentScreen}\n        submitEditItem={this.submitEditItem.bind(this)}\n        />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}